0 ArrayObject ArrayByVar A_Args
0 ArrayObject ArrayByFunc Array(
0 ArrayObject ArrayByWinGetControls WinGetControls(
0 ArrayObject ArrayByWinGetList WinGetList(
0 ArrayObject ArrayByWinGetControlsHwnd WinGetControlsHwnd(
0 ArrayObject ArrayByStrSplit StrSplit(
0 ArrayObject ArrayByShortHand [
0 ArrayObject ArrayBySysGetIP SysGetIPAddresses(
0 ArrayObject ArrayByComment ;[ \t]*Array
`
`/docs/objects/Array.htm


Method
Clone
`Array.Clone()
`/docs/objects/Array.htm#[MemberName]


Method
Delete
`Array.Delete(IndexNum)
`/docs/objects/Array.htm#[MemberName]


Method
Has
`Array.Has(IndexNum)
`/docs/objects/Array.htm#[MemberName]


Method
InsertAt
`Array.InsertAt(Index, Value1, [Value2, ... ValueN])
`/docs/objects/Array.htm#[MemberName]


Method
Pop
`Array.Pop()
/Removes and returns the last array element.
If the array is empty (Length is 0), an exception is thrown.
`/docs/objects/Array.htm#[MemberName]


Method
Push
`Array.Push([ Value, Value2, ..., ValueN ])
`/docs/objects/Array.htm#[MemberName]


Method
RemoveAt
`Array.RemoveAt(IndexNum, [Length])
`/docs/objects/Array.htm#[MemberName]


Property
Length
`Array.Length
/Retrieves or sets the length of the array.
`/docs/objects/Array.htm#[MemberName]


Property
Capacity
`Array.Capacity
/Retrieves or sets the current capacity of the array.
`/docs/objects/Array.htm#[MemberName]


